# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "main" branch.

name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_LOCATION: us-central1
  GKE_CLUSTER: supply-container-cluster
  GKE_ZONE: us-east1
  DEPLOYMENT_NAME: gke-deploy
  REPOSITORY: supply-chain-services
  IMAGE: rag-image
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PINECONE_KEY: ${{ secrets.PINECONE_KEY }}
  PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Authenticate with Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Set up Cloud SDK
    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v2

    # Configure Docker
    - name: Configure Docker
      run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev --quiet

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}


    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --file Dockerfile3 \
          --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -L -o kustomize_v5.4.1_linux_amd64.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv5.4.1/kustomize_v5.4.1_linux_amd64.tar.gz
        tar xzf kustomize_v5.4.1_linux_amd64.tar.gz
        chmod u+x ./kustomize  

      # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        cd deploy/
        # replacing the image name in the k8s template
        ./kustomize edit set image $REPOSITORY=$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide