name: Docker CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build the Docker images
      run: docker-compose -f docker-compose.yml build
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        REGION: ${{ secrets.REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PINECONE_KEY: ${{ secrets.PINECONE_KEY }}
        PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME }}
        DATABASE_URI: ${{ secrets.DATABASE_URI }}
        NEO_USERNAME: ${{ secrets.NEO_USERNAME }}
        NEO_PASSWORD: ${{ secrets.NEO_PASSWORD }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Push the Docker images
      run: docker-compose -f docker-compose.yml push
      env:
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PROJECT_ID: ${{ secrets.PROJECT_ID }}
        REGION: ${{ secrets.REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        PINECONE_KEY: ${{ secrets.PINECONE_KEY }}
        PINECONE_INDEX_NAME: ${{ secrets.PINECONE_INDEX_NAME }}
        DATABASE_URI: ${{ secrets.DATABASE_URI }}
        NEO_USERNAME: ${{ secrets.NEO_USERNAME }}
        NEO_PASSWORD: ${{ secrets.NEO_PASSWORD }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.5.0
      with:
        project_id: ${{ secrets.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Decode kubeconfig
      run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Configure kubectl
      run: kubectl config use-context gke_restaurant-supplier-networks_us-east1_supply-container-cluster

    - name: Deploy to Google Kubernetes Engine
      run: |
        kubectl apply -f k8s/
